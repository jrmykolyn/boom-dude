// --------------------------------------------------
// VARIABLES 
// --------------------------------------------------
// Add any SASS variables that are specific to this file here.


// --------------------------------------------------
// PLACEHOLDERS 
// --------------------------------------------------
// Write shared styles in placeholder rules here, then extend them from specific selectors below.


// --------------------------------------------------
// SELECTORS 
// --------------------------------------------------
* {
    box-sizing: border-box;
}


html,
body {
    margin: 0;
    padding: 0;
    background-color: #F9F9F9;
}


main {
    padding: 50px;
}


.ui {
    width: 100%;
    height: 60px;
    display: block;
    background: #FFF;
    box-shadow: 0px 3px 20px -5px rgba( 0,0,0,0.15 );
}


.ui__inner {
    width: 90%;
    max-width: 1024px;
    height: 100%;
    margin: 0 auto;
}


.ui-section {
    width: auto;
    height: 100%;
    list-style: none;
    display: inline-block;
    margin: 0;
    padding: 10px 0px;

    // Positional styles.
    &:not( :last-child ) {
        margin-right: 30px;
    }
}


.ui-section--lives,
.ui-section--inventory {
    @extend .ui-section;
}


.item-wrap {
    width: auto;
    min-width: 40px;
    height: 100%;
    display: inline-block;
    background-color: #EFEFEF;
}


.item-wrap:not( :last-child ) {
    margin-right: 10px;
}


.item {
    width: 100%;
    height: 100%;
    display: block;
    background-color: red;
    border-radius: 50%;
    transform: scale( 0.75 );
}


.item--life,
.item--bomb {
    @extend .item;
}


.item--life {
    background-color: green;
}


.bomb {
    @include position( relative );

    width: 100%;
    height: 100%;
    display: block;
    background-color: red;
    border-radius: 50%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate( -50%, -50% );
    overflow: visible;

    &.boom {
        @include pseudo( before after ) {
            @include position( absolute, 50% null null 50% );
            @include transform( translate( -50%, -50% ) );

            content: '';
            display: block;
            background-color: rgba( 255,0,0,0.8 );
        }
        
        @include pseudo( before ) {
            @include dims( 300% 100% );
        }
        @include pseudo( after ) {
            @include dims( 100% 300% );
        }
    }
}


#stage {
    width: 500px;
    height: 500px;
    display: block;
    background-color: white;
    box-shadow: 0px 3px 20px -5px rgba( 0,0,0,0.15 );
    margin: 0 auto;
    position: relative;
}


#gridWrapper,
#terrainWrapper,
#bombWrapper {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
}


.grid {
    width: 100%;
    height: 100%;
    display: flex;
    flex-wrap: wrap; /* Force each child elem. (eg. '.row') to span 100% of avail. space. */
    position: relative;
}


.row {
    @include clearfix;

    width: 100%;
    display: flex;
    overflow: visible;
}


.row:nth-child( even ) .tile:nth-child( 2n ),
.row:nth-child( odd ) .tile:nth-child( 2n - 1 ) {
    background-color: #BABABA;
}


.cell {
    width: 10%;
    height: 100%;
    display: block;
    float: left;
    position: relative;
}


.terrain {
    background-color: blue;
}


.player {
    width: 50px;
    height: 50px;
    display: block;
    background-color: rgba( 0,0,255, 0.8 );
    border-radius: 50%;
    transform: scale( 0.6 );
    position: absolute;
    top: 0;
    left: 0;
    transition: top 0.125s, left 0.125s;
}

